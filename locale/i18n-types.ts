// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */

import type { LocalizedString } from 'typesafe-i18n'

export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'ko'

export type Translation = {
	/**
	 * Access token is required for GitHub repo clone.
How to get a GitHub Access Token: (URL)
https://git.io/JsPkj
	 */
	'messageOfNeedToken': string
	/**
	 * 
The project must download the polyrepos in GitHub for execution.
The total number of polyrepos to clone is {count}.

New incoming polyrepo list: {list}
	 * @param {number} count
	 * @param {string} list
	 */
	'messageOfClone': RequiredParams2<'count', 'list'>
	/**
	 * Please enter at least one polyrepo category.
e.g.: frontend, backend, release

Each category folder is created at the top,
and you can add a polyrepo to the sub-path.

You can type multiple folders by separating them with ","

Polyrepo category:

	 */
	'messageOfSubFolders': string
	/**
	 * Please enter the GitHub CLI token.
	 */
	'pleaseEnterGithubCLIToken': string
	/**
	 * Please enter GitHub user name. (NOT EMAIL)
	 */
	'pleaseEnterUsername': string
	/**
	 * Polyrepo initial setup and structure creation are complete.
You can add polyrepo and add or excute project commands.
Please enter "npm start" to run the polyrepo manager.
	 */
	'afterFirstInitWelcome': string
	/**
	 * Please select the project command you want to use.
If you select a command, it will be executed.

	 */
	'selectCommandWantToExecute': string
	/**
	 * Running... "{title}"
	 * @param {string} title
	 */
	'runningCommand': RequiredParams1<'title'>
	/**
	 * Do you want to clone the project?
	 */
	'shallWeClone': string
	/**
	 * Update the entire local repos from the GitHub (pull)
	 */
	'commandPull': string
	/**
	 * "{packageName}" Downloading polyrepos...
	 * @param {string} packageName
	 */
	'downloadingPolyrepos': RequiredParams1<'packageName'>
	/**
	 * The terminal does not appear to support interaction.
Interactive terminals are needed for smooth execution.

For Windows, the recommended installation methods are as follows:
1. git-bash install: https://git.io/JENSe
2. hyper install: https://git.io/JEN7V
3. hyper setup: https://bit.ly/hyper-setup
	 */
	'detectedNonInteractiveTerminal': string
	/**
	 * Add Project Command (add-script)
	 */
	'commandAddScript': string
	/**
	 * Enter the name of the folder where the shellscript files
for the project will be contained (default: sh)
	 */
	'pleaseSelectShellScriptFolderName': string
	/**
	 * Please enter the name of the script file you want to create. (e.g. my-script-file)
	 */
	'pleaseEnterScriptFileName': string
	/**
	 * Please enter the name of the script command to be displayed. (e.g., üçâ Run build script)
	 */
	'pleaseEnterScriptTitle': string
	/**
	 * Do you want this command to be executed automatically on initial project installation?
	 */
	'isItEntryScript': string
	/**
	 * "{title}" Command added successfully.
Open the script file to configure the command.
Script file path: {scriptPath}
	 * @param {string} scriptPath
	 * @param {string} title
	 */
	'scriptFileCreated': RequiredParams2<'scriptPath', 'title'>
	/**
	 * Add a polyrepo (add-polyrepo)
	 */
	'commandAddPolyRepo': string
	/**
	 * Please select a sub-folder to save the polyrepo.
	 */
	'pleaseSelectSubFolder': string
	/**
	 * Please enter the URL of the polyrepo to replicate. (e.g. github.com/akasia-dev/polyger.git)
	 */
	'pleaseEnterRepoUrl': string
	/**
	 * Please enter the branch name of the polyrepo that you want to clone. (e.g. main)
	 */
	'pleaseEnterRepoBranch': string
	/**
	 * Please enter the name of the folder where the polyrepo will be stored (e.g., polyger-main))
	 */
	'pleaseEnterRepoFolderName': string
	/**
	 * Create a polyrepo in the GitHub (create-polyrepo)
	 */
	'commandCreatePolyRepo': string
	/**
	 * Please choose the location in the GitHub where you want to create the repo.
	 */
	'pleaseSelectOrganization': string
	/**
	 * Please enter the name of the reformer you want to create.
	 */
	'pleaseInputRepoName': string
	/**
	 * Do you want to create as a private repo?
	 */
	'isItPrivateRepo': string
	/**
	 * A problem occurred during the GitHub API call. Please check the token permission and network status.
	 */
	'failedGithubApiFetch': string
	/**
	 * It's a repo that already exists. shall we clone it?(Y) or should stop?(N)
	 */
	'itAlreadyExistRepositoryCouldYouCloneIt': string
	/**
	 * Please fill out the description of the repo. (will be uploaded on Github)
	 */
	'pleaseTypeRepoDescription': string
	/**
	 * Successfully created the repository in github.
	 */
	'successfullyCreatedRepository': string
}

export type TranslationFunctions = {
	/**
	 * Access token is required for GitHub repo clone.
How to get a GitHub Access Token: (URL)
https://git.io/JsPkj
	 */
	'messageOfNeedToken': () => LocalizedString
	/**
	 * 
The project must download the polyrepos in GitHub for execution.
The total number of polyrepos to clone is {count}.

New incoming polyrepo list: {list}
	 */
	'messageOfClone': (arg: { count: number, list: string }) => LocalizedString
	/**
	 * Please enter at least one polyrepo category.
e.g.: frontend, backend, release

Each category folder is created at the top,
and you can add a polyrepo to the sub-path.

You can type multiple folders by separating them with ","

Polyrepo category:

	 */
	'messageOfSubFolders': () => LocalizedString
	/**
	 * Please enter the GitHub CLI token.
	 */
	'pleaseEnterGithubCLIToken': () => LocalizedString
	/**
	 * Please enter GitHub user name. (NOT EMAIL)
	 */
	'pleaseEnterUsername': () => LocalizedString
	/**
	 * Polyrepo initial setup and structure creation are complete.
You can add polyrepo and add or excute project commands.
Please enter "npm start" to run the polyrepo manager.
	 */
	'afterFirstInitWelcome': () => LocalizedString
	/**
	 * Please select the project command you want to use.
If you select a command, it will be executed.

	 */
	'selectCommandWantToExecute': () => LocalizedString
	/**
	 * Running... "{title}"
	 */
	'runningCommand': (arg: { title: string }) => LocalizedString
	/**
	 * Do you want to clone the project?
	 */
	'shallWeClone': () => LocalizedString
	/**
	 * Update the entire local repos from the GitHub (pull)
	 */
	'commandPull': () => LocalizedString
	/**
	 * "{packageName}" Downloading polyrepos...
	 */
	'downloadingPolyrepos': (arg: { packageName: string }) => LocalizedString
	/**
	 * The terminal does not appear to support interaction.
Interactive terminals are needed for smooth execution.

For Windows, the recommended installation methods are as follows:
1. git-bash install: https://git.io/JENSe
2. hyper install: https://git.io/JEN7V
3. hyper setup: https://bit.ly/hyper-setup
	 */
	'detectedNonInteractiveTerminal': () => LocalizedString
	/**
	 * Add Project Command (add-script)
	 */
	'commandAddScript': () => LocalizedString
	/**
	 * Enter the name of the folder where the shellscript files
for the project will be contained (default: sh)
	 */
	'pleaseSelectShellScriptFolderName': () => LocalizedString
	/**
	 * Please enter the name of the script file you want to create. (e.g. my-script-file)
	 */
	'pleaseEnterScriptFileName': () => LocalizedString
	/**
	 * Please enter the name of the script command to be displayed. (e.g., üçâ Run build script)
	 */
	'pleaseEnterScriptTitle': () => LocalizedString
	/**
	 * Do you want this command to be executed automatically on initial project installation?
	 */
	'isItEntryScript': () => LocalizedString
	/**
	 * "{title}" Command added successfully.
Open the script file to configure the command.
Script file path: {scriptPath}
	 */
	'scriptFileCreated': (arg: { scriptPath: string, title: string }) => LocalizedString
	/**
	 * Add a polyrepo (add-polyrepo)
	 */
	'commandAddPolyRepo': () => LocalizedString
	/**
	 * Please select a sub-folder to save the polyrepo.
	 */
	'pleaseSelectSubFolder': () => LocalizedString
	/**
	 * Please enter the URL of the polyrepo to replicate. (e.g. github.com/akasia-dev/polyger.git)
	 */
	'pleaseEnterRepoUrl': () => LocalizedString
	/**
	 * Please enter the branch name of the polyrepo that you want to clone. (e.g. main)
	 */
	'pleaseEnterRepoBranch': () => LocalizedString
	/**
	 * Please enter the name of the folder where the polyrepo will be stored (e.g., polyger-main))
	 */
	'pleaseEnterRepoFolderName': () => LocalizedString
	/**
	 * Create a polyrepo in the GitHub (create-polyrepo)
	 */
	'commandCreatePolyRepo': () => LocalizedString
	/**
	 * Please choose the location in the GitHub where you want to create the repo.
	 */
	'pleaseSelectOrganization': () => LocalizedString
	/**
	 * Please enter the name of the reformer you want to create.
	 */
	'pleaseInputRepoName': () => LocalizedString
	/**
	 * Do you want to create as a private repo?
	 */
	'isItPrivateRepo': () => LocalizedString
	/**
	 * A problem occurred during the GitHub API call. Please check the token permission and network status.
	 */
	'failedGithubApiFetch': () => LocalizedString
	/**
	 * It's a repo that already exists. shall we clone it?(Y) or should stop?(N)
	 */
	'itAlreadyExistRepositoryCouldYouCloneIt': () => LocalizedString
	/**
	 * Please fill out the description of the repo. (will be uploaded on Github)
	 */
	'pleaseTypeRepoDescription': () => LocalizedString
	/**
	 * Successfully created the repository in github.
	 */
	'successfullyCreatedRepository': () => LocalizedString
}

export type Formatters = {}

type Param<P extends string> = `{${P}}`

type Params1<P1 extends string> =
	`${string}${Param<P1>}${string}`

type Params2<P1 extends string, P2 extends string> =
	`${string}${Param<P1>}${string}${Param<P2>}${string}`

type RequiredParams1<P1 extends string> =
	| Params1<P1>

type RequiredParams2<P1 extends string, P2 extends string> =
	| Params2<P1, P2>
	| Params2<P2, P1>
